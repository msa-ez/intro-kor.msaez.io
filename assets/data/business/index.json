{"hash":"d5477440b8b8277cb609887cd6af8bf525d4662d","data":{"markdownPage":{"id":"15b7be32a528a56e54395200d605c60b","title":"이벤트스토밍","description":"","path":"/business/","timeToRead":5,"content":"<h1 id=\"이벤트스토밍\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8%EC%8A%A4%ED%86%A0%EB%B0%8D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트스토밍</h1>\n<p>쇼핑몰 시나리오를 기반으로 이벤트스토밍을 수행합니다.</p>\n<h2 id=\"msaez-모델링-도구-접속\"><a href=\"#msaez-%EB%AA%A8%EB%8D%B8%EB%A7%81-%EB%8F%84%EA%B5%AC-%EC%A0%91%EC%86%8D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>MSAEZ 모델링 도구 접속</h2>\n<ul>\n<li>크롬 브라우저를 실행하고 <a href=\"https://www.msaez.io%EC%97%90\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.msaez.io에</a> 접속합니다.</li>\n<li>우측 상단의 아바타 아이콘을 클릭하여 <strong>깃헙(Github)</strong> 계정으로 로그인 합니다.</li>\n<li><strong>NEW</strong> -> <strong>EventStorming</strong> 을 클릭합니다.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/d35919e8-3ff6-4a13-bccc-6935f4d87dbf\" alt=\"image\"></p>\n<h2 id=\"기본-시나리오---주문-및-주문취소\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%8B%9C%EB%82%98%EB%A6%AC%EC%98%A4---%EC%A3%BC%EB%AC%B8-%EB%B0%8F-%EC%A3%BC%EB%AC%B8%EC%B7%A8%EC%86%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>기본 시나리오 - 주문 및 주문취소</h2>\n<ul>\n<li>고객(Customer)이 상품을 선택하여 주문한다(Place an Order).</li>\n<li>주문이 되면 상품 배송을 시작한다.</li>\n<li>배송이 완료되면 상품의 재고량이 감소한다.</li>\n<li>고객이 주문을 취소할 수 있다(Customer can cancel order).</li>\n<li>주문이 취소되면 배달이 취소된다(Whenever customer cancel an order, cook or delivery is canceled too).</li>\n<li>\n<ol start=\"6\">\n<li>배달이 수거되면 재고량이 증가한다.</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"이벤트스토밍-1\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8%EC%8A%A4%ED%86%A0%EB%B0%8D-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트스토밍</h2>\n<h3 id=\"step-1-event오렌지-색\"><a href=\"#step-1-event%EC%98%A4%EB%A0%8C%EC%A7%80-%EC%83%89\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 1. Event(오렌지 색)</h3>\n<p>이벤트스토밍의 첫번째 단계는 도메인 이벤트입니다.</p>\n<p>도메인 이벤트는 시나리오의 서술어(동사)를 기반으로 다음과 같이 추출 가능합니다.</p>\n<ul>\n<li>고객(Customer)이 상품을 선택하여 주문한다. -> <strong>OrderPlaced(주문됨)</strong></li>\n<li>주문이 되면 상품 배송을 시작한다. -> <strong>DeliveryStarted(배송시작됨)</strong></li>\n<li>배송이 완료되면 상품의 재고량이 감소한다. -> <strong>StockDecreased(재고감소됨)</strong></li>\n</ul>\n<p>같은 맥락으로 주문취소 프로세스에 대해서도 이벤트를 도출하면 다음과 같습니다.</p>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/f5270052-f6e8-4f2d-82dc-f134ad8e11d6\" alt=\"image\"></p>\n<h3 id=\"step-2-command하늘색와-actor노란색\"><a href=\"#step-2-command%ED%95%98%EB%8A%98%EC%83%89%EC%99%80-actor%EB%85%B8%EB%9E%80%EC%83%89\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 2. Command(하늘색)와 Actor(노란색)</h3>\n<p>도메인 이벤트를 야기시키는 커맨드(하늘색)와 액터(노란색)를 이벤트 스티커 왼쪽에 추가합니다.</p>\n<ul>\n<li>커맨드는 이벤트의 현재형으로 휴먼 인터랙션인 <strong>주문하다(order)</strong>, <strong>주문취소하다(cancel order)</strong>와 같이 라벨링합니다.</li>\n<li>페르소나를 식별해 액터를 커맨드 왼쪽에 추가합니다.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/05681759-4115-42f8-8710-ca0f8f2e1e91\" alt=\"image\"></p>\n<h3 id=\"step-3-policy라일락색\"><a href=\"#step-3-policy%EB%9D%BC%EC%9D%BC%EB%9D%BD%EC%83%89\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 3. Policy(라일락색)</h3>\n<p>이벤트에 대한 Reactive한 태스크를 폴리시(도메인 정책)라고 하며, 이벤트 오른쪽에 추가합니다.</p>\n<ul>\n<li>해당 이벤트에 따라 순연해서 벌어져야 하는 태스크를 스티커 라벨로 기술합니다.</li>\n<li>이벤트가 \"~할 때마다\" 도메인 내에서 벌어져야 하는 업무를 지칭합니다.</li>\n<li>'주문이 되면 상품을 배송한다.' -> Whenever Orderplaced then start Delivery. -> 여기서 <strong>start delivery</strong>가 폴리시가 됩니다.</li>\n<li>이벤트에 대한 폴리시를 추출해 이를 모델링하면 다음과 같습니다.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/3221fabc-39d9-4d8b-ab0f-e14c4c1cb56e\" alt=\"image\"></p>\n<h3 id=\"step-4-aggregate노란색\"><a href=\"#step-4-aggregate%EB%85%B8%EB%9E%80%EC%83%89\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 4. Aggregate(노란색)</h3>\n<p>커맨드가 도메인 상태변화를 야기하는 저장소로 이벤트의 출처로써, 커맨드와 이벤트 사이에 적절한 이름으로 추가합니다.</p>\n<ul>\n<li>주문(Order), 배송(Delivery), 상품(Product)의 이름으로 어그리게잇을 추가하면 다음과 같습니다.</li>\n<li>네이밍은 해당 서비스의 정보 저장소를 일컫는 명사형으로 기술합니다.</li>\n<li>어그리게잇 스티커는 유사한 상태 변화 스티커들에 걸쳐지도록 아래와 같이 모델링 합니다.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/6b66213a-f2de-48be-b3f2-5604507238bf\" alt=\"image\"></p>\n<h3 id=\"step-5-bounded-context\"><a href=\"#step-5-bounded-context\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 5. Bounded Context</h3>\n<p>서브모듈 단위, 또는 팀 단위의 스티커들이 그룹화 되도록 경계를 구분합니다.</p>\n<ul>\n<li>팔레트의 '점선 올가미' 아이콘을 클릭하여 각 팀별 스티커를 감싸도록 확장합니다.</li>\n<li>각 팀별 Bounded Context가 적용된 모델은 다음과 같습니다.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/eac4d230-0ec0-4afc-a414-39e4adbc85e3\" alt=\"image\"></p>\n<h3 id=\"step-6-context-mapping\"><a href=\"#step-6-context-mapping\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 6. Context Mapping</h3>\n<p>이벤트에 부착된 폴리시 스티커는 해당 이벤트에 리액티브하게 반응해야 하는 다른 팀의 업무 프로세스입니다.</p>\n<ul>\n<li>각 폴리시를 소관부서(Owner)의 바운디드 컨텍스트로 이동합니다.</li>\n<li>이후, 초기 attach 되어 있던 이벤트와 릴레이션으로 매핑합니다.</li>\n<li>도메인 이벤트를 클릭해 나타나는 화살표를 소관부서로 이동한 폴리시 스티커와 연결합니다.</li>\n<li>컨텍스트 매핑이 적용된 모델은 다음과 같습니다.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/a12fd84d-2a8c-4fc8-a4aa-ddf568b3de42\" alt=\"image\"></p>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"이벤트스토밍","anchor":"#이벤트스토밍"},{"depth":2,"value":"MSAEZ 모델링 도구 접속","anchor":"#msaez-모델링-도구-접속"},{"depth":2,"value":"기본 시나리오 - 주문 및 주문취소","anchor":"#기본-시나리오---주문-및-주문취소"},{"depth":2,"value":"이벤트스토밍","anchor":"#이벤트스토밍-1"},{"depth":3,"value":"Step 1. Event(오렌지 색)","anchor":"#step-1-event오렌지-색"},{"depth":3,"value":"Step 2. Command(하늘색)와 Actor(노란색)","anchor":"#step-2-command하늘색와-actor노란색"},{"depth":3,"value":"Step 3. Policy(라일락색)","anchor":"#step-3-policy라일락색"},{"depth":3,"value":"Step 4. Aggregate(노란색)","anchor":"#step-4-aggregate노란색"},{"depth":3,"value":"Step 5. Bounded Context","anchor":"#step-5-bounded-context"},{"depth":3,"value":"Step 6. Context Mapping","anchor":"#step-6-context-mapping"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/si-gpt/","title":""}},{"node":{"path":"/tool/on-prem-inst/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/setup-on-prem/","title":"Running on Docker Compose (with Github)"}},{"node":{"path":"/tool/development-practice/","title":"강의 개발 및 실습 환경"}},{"node":{"path":"/tool/model-driven/","title":"코드 생성"}},{"node":{"path":"/tool/marketplace/","title":"마켓플레이스"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"클라우드 IDE"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s 배포 모델링"}},{"node":{"path":"/tool/event-storming-tool/","title":"이벤트스토밍"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"인프라 모델링 (쿠버네티스)"}},{"node":{"path":"/tool/google-drive-examples/","title":"Quick Start"}},{"node":{"path":"/tool/chat-gpt/","title":"ChatGPT 기반 모델 생성"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/templates-language/python-template/","title":"Python Template "}},{"node":{"path":"/templates-language/go-template/","title":"Go Template"}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template(준비중)"}},{"node":{"path":"/started/key-features/","title":"주요 기능"}},{"node":{"path":"/started/","title":"소개"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress 배포모델 설계"}},{"node":{"path":"/started/event-storming-learning/","title":"이벤트스토밍 학습"}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/started/domain-driven/","title":"도메인 주도 설계 학습"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"자동확장(HPA) 배포"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"마이크로서비스 구현 및 동작원리 이해"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub 방식의 연동 "}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub 방식의 연동 - Choreography with Idempotency"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub 방식의 연동 - Choreography with Deadline added"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/monolith-2-misvc/","title":"Req/Res 방식의 MSA 연동 "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka 기본 명령어 "}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub 방식의 연동 - Compensation 과 Correlation"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/development/circuit-breaker/","title":"Req/Res 방식에서 장애전파 차단 - 서킷브레이커 "}},{"node":{"path":"/development/cna-start/","title":"단위 마이크로 서비스의 실행 "}},{"node":{"path":"/example-scenario/online-lecture/","title":"인터넷 강의수강 시스템"}},{"node":{"path":"/example-scenario/library-system/","title":"도서관 시스템"}},{"node":{"path":"/example-scenario/food-delivery/","title":"음식배달"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"동물병원 진료시스템"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"숙소예약"}},{"node":{"path":"/custom-template/tutorial/","title":"커스텀 템플릿 개념"}},{"node":{"path":"/custom-template/unit-test/","title":"테스트 자동화"}},{"node":{"path":"/custom-template/understanding-template-structure/","title":"템플릿 구조의 이해"}},{"node":{"path":"/custom-template/template-structure/","title":"템플릿 파일 구조"}},{"node":{"path":"/custom-template/template-syntax/","title":"Template 문법의 이해"}},{"node":{"path":"/custom-template/template-editor/","title":""}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"1. Repository 생성"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0 기반 목 서버 생성 토핑(New)"}},{"node":{"path":"/custom-template/helper/","title":""}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":""}},{"node":{"path":"/custom-template/creating-custom-template-1/","title":"커스텀 템플릿 생성"}},{"node":{"path":"/custom-template/global-helper/","title":""}},{"node":{"path":"/custom-template/designing-template-helper/","title":"Built-in Helper functions"}},{"node":{"path":"/custom-template/custom-template/","title":"Eventstorming Template Objects"}},{"node":{"path":"/business/","title":"이벤트스토밍"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}}]}},"context":{}}