{"hash":"0967cc3664e8c1ae918d8b893981efa1dfb081b4","data":{"markdownPage":{"id":"a2172244d7bbb5a9f8fc8fe8a59455f9","title":"1. Repository 생성","description":"","path":"/custom-template/template-editor-custom-template/","timeToRead":3,"content":"<h2 id=\"1-repository-생성\"><a href=\"#1-repository-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Repository 생성</h2>\n<p>MSAEZ 모델을 기반으로 커스텀 템플릿을 개발하는 과정을 설명드리겠습니다.</p>\n<p>먼저 커스텀 템플릿 작업을 수행할 repository를 생성하겠습니다.</p>\n<p><a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/</a> 에 접속 후, 템플릿 파일을 만들 repository를 생성합니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/b6f49e7b-4674-47a5-8ed9-69caf94fac64\"></p>\n<p>예시에서는 사용할 템플릿 언어를 제목에 포함하여 'custom-spring-boot'로 생성하였습니다.</p>\n<h2 id=\"2-템플릿-선택\"><a href=\"#2-%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%84%A0%ED%83%9D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. 템플릿 선택</h2>\n<p>생성한 repository의 url을 기반으로 등록해야 합니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/0d2651bd-2082-413b-8536-2f8f08b9aeb1\"></p>\n<p>위의 예시처럼 먼저 코드 프리뷰 좌측 상단에 위치한 template chip을 클릭해서 템플릿 선택 화면으로 이동해야합니다.</p>\n<p>이후 목록에서 Custom Template 우측에 위치한 'select'버튼을 클릭하면 git repository url을 입력할 수 있는 화면이 나타납니다.</p>\n<p>여기에 이전 단계에서 생성한 repository의 url을 입력 후, 'APPLY' 버튼을 클릭하여 적용할 수 있습니다.</p>\n<p>적용이 완료되었다면 'Edit Template' 아이콘을 클릭하여 Template Editor 화면으로 진입합니다.</p>\n<p>Template Editor란 MSAEZ내에 내장되어 있는 템플릿 편집기능으로 선택한 템플릿 파일의 코드를 변경하였을 때, 변환된 결과값을 즉각적으로 확인할 수 있는 기능을 제공하고 있습니다.</p>\n<h2 id=\"3-폴더-생성-및-파일-생성\"><a href=\"#3-%ED%8F%B4%EB%8D%94-%EC%83%9D%EC%84%B1-%EB%B0%8F-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. 폴더 생성 및 파일 생성</h2>\n<p>Template Editor 화면에 진입한 후 좌측 하단의 Template Explorer를 확인하면 폴더와 파일이 아무것도 생성되어있지 않은 것을 확인할 수 있습니다.</p>\n<p>따라서 템플릿 생성을 위한 템플릿 파일과, 템플릿 파일을 구성할 폴더를 생성해야합니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/1f82fd51-e869-4437-9059-b9615111da36\"></p>\n<p>기본적인 구조를 잡기 위해 폴더를 생성하도록 하겠습니다. 위의 예시처럼 좌측의 Template Explorer에서 선택한 템플릿 이름의 우측에 위치한 폴더 생성 아이콘을 클릭하여 폴더를 생성할 수 있습니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/13e15099-475b-4fd7-8a26-cce064ee3b31\"></p>\n<p>예시에서는 spring-boot의 폴더 구조를 참고하여 생성하였습니다.</p>\n<p>이후 domain 폴더 하위에 템플릿 파일을 생성해보겠습니다. </p>\n<p>폴더 하위에 파일을 생성하기 위해 폴더의 이름을 클릭한 후, 우측의 파일 생성 아이콘을 클릭하여 파일을 생성할 수 있으며 아래와 같이 Aggregate.java 파일을 생성할 수 있습니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/0d277770-5dcd-44c0-b2eb-334077e25a67\"></p>\n<h2 id=\"4-템플릿-데이터-확인\"><a href=\"#4-%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. 템플릿 데이터 확인</h2>\n<p>MSAEZ에서 진행한 모델링을 통해 참조할 수 있는 데이터가 생성되었고, 데이터를 통해 템플릿 파일의 코드를 구성하는데 활용할 수 있습니다.</p>\n<p>아래의 예시처럼 Template Editor 좌측 상단 영역의 'MODEL EXPLORER'에서 모델링을 통해 생성된 데이터를 확인할 수 있습니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/1181c8a3-636f-4777-9552-ce7d9670ea30\"></p>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":2,"value":"1. Repository 생성","anchor":"#1-repository-생성"},{"depth":2,"value":"2. 템플릿 선택","anchor":"#2-템플릿-선택"},{"depth":2,"value":"3. 폴더 생성 및 파일 생성","anchor":"#3-폴더-생성-및-파일-생성"},{"depth":2,"value":"4. 템플릿 데이터 확인","anchor":"#4-템플릿-데이터-확인"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/templates-language/python-template/","title":"Python Template "}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template(준비중)"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template"}},{"node":{"path":"/tool/setup-on-prem/","title":"Running on Docker Compose (with Github)"}},{"node":{"path":"/tool/si-gpt/","title":""}},{"node":{"path":"/tool/on-prem-inst/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/model-driven/","title":"코드 생성"}},{"node":{"path":"/tool/marketplace/","title":"마켓플레이스"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s 배포 모델링"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"인프라 모델링 (쿠버네티스)"}},{"node":{"path":"/tool/google-drive-examples/","title":"Quick Start"}},{"node":{"path":"/tool/event-storming-tool/","title":"이벤트스토밍"}},{"node":{"path":"/tool/development-practice/","title":"강의 개발 및 실습 환경"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"클라우드 IDE"}},{"node":{"path":"/tool/chat-gpt/","title":"ChatGPT 기반 모델 생성"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/started/key-features/","title":"주요 기능"}},{"node":{"path":"/started/","title":"소개"}},{"node":{"path":"/started/event-storming-learning/","title":"이벤트스토밍 학습"}},{"node":{"path":"/started/domain-driven/","title":"도메인 주도 설계 학습"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress 배포모델 설계"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"자동확장(HPA) 배포"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"마이크로서비스 구현 및 동작원리 이해"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub 방식의 연동 - Choreography with Idempotency"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub 방식의 연동 - Choreography with Deadline added"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub 방식의 연동 "}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Req/Res 방식의 MSA 연동 "}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka 기본 명령어 "}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/development/circuit-breaker/","title":"Req/Res 방식에서 장애전파 차단 - 서킷브레이커 "}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub 방식의 연동 - Compensation 과 Correlation"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/development/cna-start/","title":"단위 마이크로 서비스의 실행 "}},{"node":{"path":"/example-scenario/food-delivery/","title":"음식배달"}},{"node":{"path":"/example-scenario/online-lecture/","title":"인터넷 강의수강 시스템"}},{"node":{"path":"/example-scenario/library-system/","title":"도서관 시스템"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"동물병원 진료시스템"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"숙소예약"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/custom-template/tutorial/","title":"커스텀 템플릿 개념"}},{"node":{"path":"/custom-template/understanding-template-structure/","title":"템플릿 구조의 이해"}},{"node":{"path":"/custom-template/unit-test/","title":"테스트 자동화"}},{"node":{"path":"/custom-template/template-syntax/","title":"Template 문법의 이해"}},{"node":{"path":"/custom-template/template-structure/","title":"템플릿 파일 구조"}},{"node":{"path":"/custom-template/template-editor/","title":""}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"1. Repository 생성"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0 기반 목 서버 생성 토핑(New)"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":""}},{"node":{"path":"/custom-template/helper/","title":""}},{"node":{"path":"/custom-template/global-helper/","title":""}},{"node":{"path":"/custom-template/custom-template/","title":"Eventstorming Template Objects"}},{"node":{"path":"/custom-template/designing-template-helper/","title":"Built-in Helper functions"}},{"node":{"path":"/custom-template/creating-custom-template-1/","title":"커스텀 템플릿 생성"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/business/","title":"이벤트스토밍"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}}]}},"context":{}}