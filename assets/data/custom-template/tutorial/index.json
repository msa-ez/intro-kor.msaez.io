{"hash":"97816ef43d65a9726b911ff76cd96eb6e4c1c61d","data":{"markdownPage":{"id":"c2576d9ac97ca5f1f5a0aa7467b98d61","title":"커스텀 템플릿 개념","description":"","path":"/custom-template/tutorial/","timeToRead":2,"content":"<h1 id=\"커스텀-템플릿-개념\"><a href=\"#%EC%BB%A4%EC%8A%A4%ED%85%80-%ED%85%9C%ED%94%8C%EB%A6%BF-%EA%B0%9C%EB%85%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>커스텀 템플릿 개념</h1>\n<h2 id=\"커스텀-템플릿이란\"><a href=\"#%EC%BB%A4%EC%8A%A4%ED%85%80-%ED%85%9C%ED%94%8C%EB%A6%BF%EC%9D%B4%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>커스텀 템플릿이란</h2>\n<p>커스텀 템플릿은 원하는 템플릿을 제공된 기본 템플릿에 추가하여 이벤트스토밍 모델의 결과에 따라 원하는 템플릿으로 코드를 생성합니다.</p>\n<p>이벤트스토밍 결과를 원하는 템플릿으로 사용하려면 커스텀 템플릿을 생성해야 합니다. 템플릿 파일은 크게 생성 관련 메타데이터와 소스 코드로 나누어지며, 메타데이터와 소스 코드는 \"---\"으로 구분됩니다.</p>\n<p>템플릿 생성은 기본적으로 {{ Mustache }} 엔진을 사용하며, Mustache는 {{ }} 안의 값을 키 값으로 가져오는 엔진입니다.</p>\n<p>템플릿이 적용된 속성이 어떻게 생성되는지에 대한 정보는 다음 링크에서 확인할 수 있습니다: <a href=\"https://intro-kor.msaez.io/custom-template/custom-template/#custom-template\" target=\"_blank\" rel=\"noopener noreferrer\">https://intro-kor.msaez.io/custom-template/custom-template/#custom-template</a></p>\n<p>다음은 Aggregate에 spring-boot 템플릿을 적용한 간단한 예시입니다.</p>\n<blockquote>\n<p>AggregateRoot.java\n<img src=\"https://user-images.githubusercontent.com/113568664/228171561-6d6ca9dc-2c5d-420d-9216-4604aee2ed0c.png\" alt=\"스크린샷 2023-03-28 오후 5 09 46\"></p>\n</blockquote>\n<p>그리고 아래 소스 코드는 위의 템플릿을 적용하여 생성된 결과물입니다.</p>\n<blockquote>\n<p>File.java\n<img src=\"https://user-images.githubusercontent.com/113568664/228173493-2adfa72d-ea88-4dba-bce3-9af28e82d930.png\" alt=\"스크린샷 2023-03-28 오후 5 17 06\"></p>\n</blockquote>\n<p>위의 이미지에서 보여지는 대로, Mustache 엔진을 사용한 값들은 실제 소스 코드로 변환됩니다.</p>\n<p>Spring Boot를 포함한 다양한 언어와 프레임워크에 대한 예제 템플릿들은 다음 링크에서 확인하실 수 있습니다:\n<a href=\"https://github.com/orgs/msa-ez/repositories?q=template&#x26;type=all&#x26;language=&#x26;sort=\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/orgs/msa-ez/repositories?q=template&#x26;type=all&#x26;language=&#x26;sort=</a> </p>\n<h3 id=\"템플릿-변경하기\"><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>템플릿 변경하기</h3>\n<p>다른 언어/프레임워크의 템플릿으로 변경하려면 코드 미리보기 창 상단에서 간단히 선택할 수 있습니다.</p>\n<p><img src=\"https://github.com/kykim97/factory-pattern/assets/113568664/452ddc05-9e5d-44e6-84fc-27a38842973a\" alt=\"스크린샷 2023-05-16 오후 4 51 55\"></p>\n<p>예를 들어, 기존의 Spring Boot 템플릿을 Axon Framework 템플릿으로 변경한 후에는 Aggregate 파일에서 변경 사항이 발생합니다.</p>\n<blockquote>\n<p>Axon 템플릿이 적용된 AggregateRoot.java\n<img src=\"https://github.com/kykim97/factory-pattern/assets/113568664/a969cc29-1612-4900-b42a-524ba3ceb5ac\" alt=\"스크린샷 2023-05-16 오후 5 17 09\"></p>\n<p>FileAggregate.java\n<img src=\"https://github.com/kykim97/factory-pattern/assets/113568664/f3454a75-15e1-45c7-918c-55f70cfc3b6e\" alt=\"스크린샷 2023-05-16 오후 5 17 54\"></p>\n</blockquote>\n<p>이렇게 하나의 파일 내에서 각 언어/프레임워크의 특성에 따라 적용할 어노테이션 및 가져올 디펜던시들의 종류가 변경되어, 결과적으로 선택한 언어/프레임워크에 맞게 전체 프로젝트가 변경됩니다.</p>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"커스텀 템플릿 개념","anchor":"#커스텀-템플릿-개념"},{"depth":2,"value":"커스텀 템플릿이란","anchor":"#커스텀-템플릿이란"},{"depth":3,"value":"템플릿 변경하기","anchor":"#템플릿-변경하기"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/infrastructure-modeling/","title":"인프라 모델링 (쿠버네티스)"}},{"node":{"path":"/tool/on-prem-inst/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/marketplace/","title":"템플릿/토핑 마켓플레이스"}},{"node":{"path":"/tool/google-drive-examples/","title":"구글 드라이브 예제"}},{"node":{"path":"/tool/event-storming-tool/","title":"이벤트스토밍"}},{"node":{"path":"/tool/development-practice/","title":"강의 개발 및 실습 환경"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"클라우드 IDE"}},{"node":{"path":"/tool/chat-gpt/","title":"ChatGPT 기반 모델 생성"}},{"node":{"path":"/templates-language/python-template/","title":"Python Template "}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template(준비중)"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template"}},{"node":{"path":"/started/","title":"소개"}},{"node":{"path":"/custom-template/tutorial/","title":"커스텀 템플릿 개념"}},{"node":{"path":"/custom-template/unit-test/","title":"Unit Test 생성 토핑(New)"}},{"node":{"path":"/started/domain-driven/","title":"도메인 주도 설계 학습"}},{"node":{"path":"/started/event-storming-learning/","title":"이벤트스토밍 학습"}},{"node":{"path":"/custom-template/designing-template/","title":"커스텀 템플릿 만들기"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0 기반 목 서버 생성 토핑(New)"}},{"node":{"path":"/custom-template/custom-template/","title":"커스텀 템플릿 객체별 속성"}},{"node":{"path":"/operations/service-mesh-ab-testing/","title":"Istio based A/B testing 배포"}},{"node":{"path":"/operations/service/","title":"12번가 마이크로서비스 라우터(Service) 생성"}},{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/operations/ops-readiness/","title":"셀프힐링 & 무정지 배포 실습"}},{"node":{"path":"/operations/ops-persistence-volume-azure/","title":"파일공유를 위한 클라우드 스토리지 활용(Azure)"}},{"node":{"path":"/operations/ops-service-mesh-istio-2/","title":"[Service Mesh] Istio-2"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-pod-status/","title":"Pod 상태값에 따른 마이크로서비스 트러블 슈팅"}},{"node":{"path":"/operations/ops-persistence-volume-gcp/","title":"파일공유를 위한 클라우드 스토리지 활용(GCP)"}},{"node":{"path":"/operations/ops-persistence-volume-efs/","title":"파일공유를 위한 NAS 스토리지 생성과 설정"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-label-annotation/","title":"Labels and Annotations"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Command"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/ops-configmap/","title":"Kubernetes에 환경변수 구성하기"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-aws-csi-setting/","title":"AWS Cloud Setup(Container Storage Interface)"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/microservice-logging2/","title":"마이크로서비스 통합 로깅 with Loki stack"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/microservice-logging/","title":"마이크로서비스 통합 로깅 with EFK stack"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/istio-sre-monitoring/","title":"Service Reliability Engineering"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/istio-metric-based-hpa/","title":"[Service Mesh] Istio Metrics based HPA"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/example-scenario/online-lecture/","title":"인터넷 강의수강 시스템"}},{"node":{"path":"/operations/apply-security-to-12st-mall/","title":"12번가 Mall에 토큰인증 적용하기"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"동물병원 진료시스템"}},{"node":{"path":"/example-scenario/library-system/","title":"도서관 시스템"}},{"node":{"path":"/example-scenario/food-delivery/","title":"음식배달"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"숙소예약"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"마이크로서비스 구현 및 동작원리 이해"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub 방식의 연동 - Choreography with Idempotency"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub 방식의 연동 - Choreography with Deadline added"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub 방식의 연동 "}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token 기반 인증 인가 - Advanced"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Req/Res 방식의 MSA 연동 "}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka 기본 명령어 "}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/cna-start/","title":"단위 마이크로 서비스의 실행 "}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub 방식의 연동 - Compensation 과 Correlation"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/development/circuit-breaker/","title":"Req/Res 방식에서 장애전파 차단 - 서킷브레이커 "}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga with Axon Framework"}},{"node":{"path":"/business/","title":"[이벤트스토밍] - 12번가 쇼핑몰 예제"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}}]}},"context":{}}